name: Build Sandbox Image

on:
  workflow_call:
    inputs:
      build_default_branch_manifest:
        type: boolean
        default: false
      timeout_minutes:
        type: number
        default: 15
      image_name:
        required: true
        type: string
      file:
        required: false
        type: string
      target:
        required: false
        type: string
      fetch_depth:
        required: false
        type: number
        default: 1
      build_context:
        required: false
        type: string
        default: .

    secrets:
      DOCKER_PASSWORD:
        required: true

jobs:
  build-image:
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: ${{ inputs.fetch_depth }}
      - name: Resolve commit id and image name
        run: |
          echo "IMAGE_NAME=babelcloud/${{ inputs.image_name }}" >> $GITHUB_ENV
          echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Resolve image tag with rev
        run: echo "IMAGE_TAGS=${IMAGE_TAGS},${IMAGE_NAME}:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Resolve image tag with branch name
        if: ${{ inputs.build_default_branch_manifest && github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
        run: echo "IMAGE_TAGS=${IMAGE_TAGS},${IMAGE_NAME}:${GITHUB_REF_NAME}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          username: babelcloud
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Calculate CACHEBUST value
        run: echo "CACHEBUST=$(echo -n ${{ secrets.GH_TOKEN }} | md5sum | awk '{print $1}')" >> $GITHUB_ENV

      - name: Set cache scope
        run: |
          CACHE_SCOPE=${{ env.IMAGE_NAME }}
          CACHE_SCOPE=${CACHE_SCOPE//\//-}
          echo "CACHE_SCOPE=${CACHE_SCOPE}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build_context }}
          push: true
          file: ${{ inputs.file || './Dockerfile' }}
          tags: ${{ env.IMAGE_TAGS }}
          provenance: false
          build-args: |
            CACHEBUST=${{ env.CACHEBUST }}
            COMMIT_ID=${{ env.COMMIT_ID }}
          cache-from: type=gha,scope=${{ env.CACHE_SCOPE }}
          cache-to: type=gha,scope=${{ env.CACHE_SCOPE }},mode=max
          target: ${{ inputs.target }}
          platforms: linux/amd64,linux/arm64