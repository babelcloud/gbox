#!/bin/bash

# gbox - Main command for box management
# Usage: gbox <command> [arguments]

set -e

# Get the real path of the script, following symlinks
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Command aliases using parallel arrays
ALIAS_NAMES=(setup cleanup export)
ALIAS_CMDS=("cluster setup" "cluster cleanup" "mcp export")

# Get alias command by name
get_alias() {
    local name="$1"
    local i
    for i in "${!ALIAS_NAMES[@]}"; do
        if [[ "${ALIAS_NAMES[$i]}" == "$name" ]]; then
            echo "${ALIAS_CMDS[$i]}"
            return 0
        fi
    done
    echo ""
}

# Help message
help() {
    local help_type="${1:-all}"
    
    case "$help_type" in
        short)
            echo "Box management tool"
            return 0
            ;;
        all)
            cat <<EOF
Usage: gbox <command> [arguments]

Available Commands:
EOF
            # Show aliases first
            for alias in "${ALIAS_NAMES[@]}"; do
                local cmd="$(get_alias "$alias")"
                local -a parts
                IFS=' ' read -r -a parts <<< "$cmd"
                local cmd_script="$SCRIPT_DIR/gbox-${parts[0]}"
                if [[ -x "$cmd_script" ]]; then
                    # Get description from the subcommand's help short
                    description=$("$cmd_script" "${parts[1]}" --help short 2>/dev/null || echo "${parts[0]} ${parts[1]}")
                    printf "    %-18s %s\n" "$alias" "$description"
                fi
            done
            printf "    %-18s %s\n" "help" "Show help information"

            echo ""
            echo "Sub Commands:"
            # Get short descriptions from subcommands
            for cmd in box cluster mcp; do
                if [[ -x "$SCRIPT_DIR/gbox-$cmd" ]]; then
                    description=$("$SCRIPT_DIR/gbox-$cmd" --help short 2>/dev/null || echo "$cmd operations")
                    printf "    %-18s %s\n" "$cmd" "$description"
                fi
            done

            cat <<EOF

Options:
    --help [short|all]  Show this help message (default: all)

Examples:
    gbox setup                 # Initialize the environment
    gbox box create mybox      # Create a new box
    gbox box list              # List all boxes
    gbox export                # Export MCP configuration
    gbox cleanup               # Clean up everything

Use "gbox <command> --help" for more information about a command.
EOF
            ;;
        *)
            echo "Invalid help type: $help_type" >&2
            echo "Valid types are: short, all" >&2
            return 1
            ;;
    esac
}

# Execute aliased command
execute_alias() {
    local alias_name="$1"
    shift
    local cmd="$(get_alias "$alias_name")"
    local -a parts
    IFS=' ' read -r -a parts <<< "$cmd"
    local target_script="gbox-${parts[0]}"
    if [[ ${#parts[@]} -gt 1 ]]; then
        exec "$SCRIPT_DIR/$target_script" "${parts[1]}" "$@"
    else
        exec "$SCRIPT_DIR/$target_script" "$@"
    fi
}

# Main command handler
case "$1" in
    cluster|box|mcp)
        cmd="$1"
        shift
        if [[ -x "$SCRIPT_DIR/gbox-$cmd" ]]; then
            exec "$SCRIPT_DIR/gbox-$cmd" "$@"
        else
            echo "Error: Command '$cmd' not found" >&2
            exit 1
        fi
        ;;
    --help)
        help "${2:-all}"
        ;;
    help)
        help "${2:-all}"
        ;;
    *)
        if [[ -n "$1" ]] && [ -n "$(get_alias "$1")" ]; then
            execute_alias "$@"
        else
            help
            [[ -n "$1" ]] && exit 1
            exit 0
        fi
        ;;
esac
