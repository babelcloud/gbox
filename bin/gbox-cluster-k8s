#!/usr/bin/env bash

# gbox-cluster-k8s - Handles k8s cluster setup and cleanup operations

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/common"

MANIFEST_DIR="$SCRIPT_DIR/../manifests"

# Setup command
setup() {
    echo "Setting up k8s box environment..."
    mkdir -p "$GBOX_HOME"

    # Check if cluster already exists
    if ! kind get clusters 2>/dev/null | grep -q "^${GBOX_CLUSTER}\$"; then
        echo "Creating new cluster..."
        ytt -f "$MANIFEST_DIR/k8s/cluster.yml" \
            --data-value-yaml apiServerPort=41080 \
            --data-value home=$HOME \
            | kind create cluster --name "$GBOX_CLUSTER" --kubeconfig "$GBOX_KUBECFG" --config -
    else
        echo "Cluster '${GBOX_CLUSTER}' already exists, skipping creation..."
    fi
    
    # Deploy gbox app
    echo "Deploying gbox app..."
    ytt -f "$MANIFEST_DIR/k8s/app/" \
        | kapp deploy -y \
            --kubeconfig "$GBOX_KUBECFG" \
            --app gbox \
            --file -
    
    echo "K8s setup completed successfully"
}

# Cleanup command
cleanup() {
    echo "Cleaning up k8s box environment..."
    kind delete cluster --name "$GBOX_CLUSTER"
    echo "K8s cleanup completed successfully"
}

# Main command handler
case "$1" in
    setup)
        shift
        setup "$@"
        ;;
    cleanup)
        shift
        cleanup "$@"
        ;;
    *)
        echo "Unknown command: $1"
        exit 1
        ;;
esac 